#!/bin/bash

recursive_count=$(cat $PFILE | grep recursive_count | sed 's/=/ /g' | awk '{print $2}')
recursive_interval=$(cat $PFILE | grep recursive_interval | sed 's/=/ /g' | awk '{print $2}')
worker_dir=$(cat $PFILE | grep worker_dir | sed 's/=/ /g' | awk '{print $2}')
mount_point=$(cat $PFILE | grep mount_point | sed 's/=/ /g' | awk '{print $2}')
workflow_dir=$(cat $PFILE | grep workflow | sed 's/=/ /g' | awk '{print $2}')

mkdir -p $mount_point/data $mount_point/arrive

username=$(cat $PFILE | grep username | sed 's/=/ /g' | awk '{print $2}')
password=$(cat $PFILE | grep password | sed 's/=/ /g' | awk '{print $2}')
server=$(cat $PFILE | grep server | sed 's/=/ /g' | awk '{print $2}')
port=$(cat $PFILE | grep port | sed 's/=/ /g' | awk '{print $2}')

mysqlsh -u$username -p$password -h$server -P$port --sqlc -e "create database if not exists mysql_autoingest_admin; create table if not exists mysql_autoingest_admin.refresh_manager(db_name varchar(15), table_name varchar(100));"

cat /dev/null > $workflow_dir/load_tables.sql

for x in $(find $mount_point/data -type f | grep csv | sed 's/\// /g' | awk '{print $5"."$6}' | sort | uniq); do
        echo "alter table $x secondary_load;" >> $workflow_dir/load_tables.sql
done;

mysqlsh -u$username -p$password -h$server -P$port --sqlc -e "source $worker_dir/refresh_manager.sql; source $worker_dir/refresh_manager_remove.sql; source $worker_dir/refresh_manager_list.sql; source $workflow_dir/load_tables.sql"

t=$((1))
while [ $t != $recursive_count ]
do
        if [ $(ps -ef | grep c_os | grep -v grep | wc -l) -eq 0 ]; then
		$worker_dir/c_os 2> /dev/null 1> /dev/null & 
        fi

	if [ $(ps -ef | grep c_smon | grep -v grep | wc -l) -eq 0 ]; then
                $worker_dir/c_smon 2> /dev/null 1> /dev/null &
        fi

	t=$(( $t + 1 ))
        sleep $recursive_interval
done
